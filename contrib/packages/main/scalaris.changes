-------------------------------------------------------------------
Thu Oct 11 10:30:00 UTC 2012 - kruber@zib.de

- Scalaris 0.5.0 (codename "Saperda scalaris")
  * Packaging:
    - new init.d script to start Scalaris
    - added chef scripts to deploy Scalaris nodes
    - improved Windows start scripts (support for R15B01 and R15B02, don't
      close command prompt window immediately after shutdown if
      double-clicked)
    - more flexible scalarisctl (arbitrary parameter order, allow setting
      cookie, ports and number of nodes in VM via parameters, allow using
      screen for daemonised sessions, allow graceful leave via "gstop"
      command, new "status" command)
    - support for new linux distributions (Fedora 17, Ubuntu 12.04,
      openSUSE 12.2)
    - let scalarisctl checkinstallation also perform runtime tests for the
      APIs
  * API:
    - allow Scalaris monitoring via JMX through the Java API
    - added an executor-service to the Java-API (de.zib.scalaris.executor.*)
    - added a node discovery daemon to the Java-API
    - allow compressed communication between the Java-API and Erlang for
      increased performance, especially if the two are on separate nodes
    - added VM management support to the JSON- and Python-API
    - added transaction log filtering to the Java-API, i.e. only sent the
      needed parts of the tlog back to Erlang and re-combine the result
    - fixed api_tx:req_list_commit_each/1 not running requests in parallel
      -> do not assure any order of requests, even if on same key!
  * Demonstrator "Wiki on Scalaris"
    (supported by 4CaaSt http://www.4caast.eu/):
    - allow different partitioned data models for better performance and
      scalability
    - allow logging of user requests
    - added support for checking whether another article exists (approximate)
      -> show link colours based on this check
    - added check for bad page titles
    - allow SERVERNAME and SERVERPATH in config for setups with load
      balancers
    - reduced memory footprint of Wiki data in Scalaris
    - support for newer wiki xml dumps
    - added support for using a MediaWiki-like SQLite-DB backend for e.g.
      filtering
    - improved overall performance
    - several rendering fixes
  * Business Logic:
    - added (experimental) support for replica repair (disabled by default)
      (thanks to Maik Lange)
    - added monitoring of memory statistics (also available via web
      interface)
    - better error reporting in the failure detector
    - reduced message overhead by UIDs and message/tuple tags
    - reduced overall message size of transactions:
      * do not include the (uncompressed) value in messages of the read phase
        of write operations
      * do not include the value in init_TP messages
    - allow VM-flag "first" to be set via config file
    - gather overall connection statistics in comm_stats (also available via
      web interface)
    - reduced erroneous failure messages on node shutdown
    - integrated comm_layer into comm_server
    - better scalability in pid_groups (find processes round-robin in
      find_a/1)
    - several changes to improve overall performance and/or CPU time at the
      nodes
  * Tests:
    - support for more types in the runtime type-checker
    - verify several API functions via runtime type-checker (also test
      private functions if possible!)
  * Tools:
    - distributed protocol visualisation via trace_mpath (text-based or
      latex-file for graphical presentation)
    - better profiling via top for Erlang processes
    - better debugging, e.g. via ASCII supervisor-tree rendering in verbose
      mode
  * Bugs:
    - fixed memory leaks in read and write operations
    - fixed memory leaks in tx_tm_rtm
    - prevent potential endless loops in tx_tm_rtm
    - fixed inform RTMs sometimes informing the wrong RTMs
    - fixed numerous other bugs

-------------------------------------------------------------------
Thu Mar 22 09:51:00 UTC 2012 - kruber@zib.de

- Scalaris 0.4.1
  * Packaging:
    - new official ConPaaS packages (http://www.conpaas.eu/)
    - install rubygem dependencies in Debian postinstall scripts for Ruby API
    - improved Windows start scripts (if set, uses the ERLANG_HOME
      environment variable to find Erlang, otherwise searches for Erlang in
      common paths)
  * Bugs:
    - better tx cleanup (should fix rare occurance of duplicate client
      inform)
    - forward additional parameters of the start scripts to new syntax of
      scalarisctl

-------------------------------------------------------------------
Wed Jan 24 23:48:00 UTC 2012 - kruber@zib.de

- Scalaris 0.4.0 (codename "Pomacea scalaris")
  * API:
    - new functions for incremental data change:
      test_and_set: check for a provided old value before setting a new one
      add_on_nr: increment a numeric value
      add_del_on_list: append or delete entries from a list value
    - added VM API to manage Scalaris nodes inside an Erlang virtual machine
    - added monitoring API to retrieve some live metrics
    - added a connection pool convenience class (Java, Python)
  * Demonstrator "Wiki on Scalaris"
    (supported by 4CaaSt http://www.4caast.eu/):
    - improved performance of page edits
    - improved performance of Wikipedia dump loading
    - several rendering fixes
  * Business Logic:
    - improved handling of large values by reducing overhead of transaction
      log handling (empty TLog after commit), no copy of value in TLog
      returned to user after read requests)
    - eliminated timeouts in data hand-over protocol (relies on fd now)
    - added a DB subscribe mechanism, e.g. to become informed when locks
      are freed
    - fixed a strong consistency issue in the tx protocol
    - gather some run-time statistics and expose them via the APIs and the
      web debug interface
  * Infrastructure:
    - support for Erlang 15B
    - fd now also uses feedback from TCP layer
    - made message sending more flexible (gets an option list)
    - added and corrected several Erlang type specifications
    - added scripts to create Scalaris images for OpenNebula
    - added tools for using Scalaris as the Database as a Service
      component in ConPaaS (http://www.conpaas.eu/) which is part of the
      EU project Contrail (http://contrail-project.eu/)
    - added a separate communication channel for priority messages, e.g. fd
      (reduces falsely reported node crashes under heavy load)
  * Tests:
    - added runtime type-checker for random testing extended unittests
  * Documentation:
    - updated documentation to extended APIs
  * Bugs:
    - fixed numerous bugs

-------------------------------------------------------------------
Fri Jul 15 15:01:00 UTC 2011 - kruber@zib.de

- Scalaris 0.3.0 (codename "Rhinechis Scalaris")
  * API
    - new API with interoperable bindings to Java, Python, Ruby, and JSON
    - support for several data types, including strings, integers, JSON
      objects, binary objects.
    - new transaction interface with support for bundled requests for better
      latency.
    - separate APIs to access the raw DHT, a DHT with replication, and the
      transactional DHT
  * Demonstrator
    - added Wikipedia-hosting using Scalaris as demonstrator application
  * Business Logic
    - fault-tolerant startup: start Scalaris when a quorum of the known_hosts
      becomes available (option -q in bin/scalarisctl)
    - perform data hand-over when nodes join/gracefully leave (also works when
      transactions are executed concurrently)
    - added passive load balancing (when a node joins a ring, it samples
      several other nodes and joins at the node that balances the number of
      stored items the most)
    - completely rewritten transaction layer (more modular, more extendible,
      less latency)
    - modularized / reimplemented Paxos algorithm, so the algorithm can also
      be used outside transactions (e.g. used for quorum-startup)
    - switched almost all components to our component framework
     'gen_component'
    - added gossiping for estimating e.g. the number of nodes or the average
      load in a ring
    - more reliable unreliable look-up
    - better ring start-up on slow networks
  * Infrastructure
    - Vivaldi and topology inference
    - support for Erlang 13B01 and newer
    - faster TCP/IP communication between Scalaris nodes
    - completely rewritten failure detector framework for more accurate
      detection of node failures
    - added numerous Erlang type specifications
    - extended unittests
  * Tests
    - added own random testing framework that reads type specifications and
      scans the source code for constants to generate proper random test-data
    - extended gen_component with breakpoint-support for debugging and testing
      (perform deterministic pseudo-random message interleaving tests)
    - added numerous unittests
    - added language-binding interoperability tests
  * Documentation
    - extended, but - as always - by far not enough...
  * Bugs
    - fixed countless bugs
