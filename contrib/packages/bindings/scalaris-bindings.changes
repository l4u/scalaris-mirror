-------------------------------------------------------------------
Thu Oct 11 10:30:00 UTC 2012 - kruber@zib.de

- Scalaris 0.5.0 (codename "Saperda scalaris")
  * API:
    - allow Scalaris monitoring via JMX through the Java API
    - added an executor-service to the Java-API (de.zib.scalaris.executor.*)
    - added a node discovery daemon to the Java-API
    - allow compressed communication between the Java-API and Erlang for
      increased performance, especially if the two are on separate nodes
    - added VM management support to the JSON- and Python-API
    - added transaction log filtering to the Java-API, i.e. only sent the
      needed parts of the tlog back to Erlang and re-combine the result
    - fixed api_tx:req_list_commit_each/1 not running requests in parallel
      -> do not assure any order of requests, even if on same key!
  * Bugs:
    - fixed numerous bugs

-------------------------------------------------------------------
Thu Mar 22 09:51:00 UTC 2012 - kruber@zib.de

- Scalaris 0.4.1
  * Packaging:
    - install rubygem dependencies in Debian postinstall scripts for Ruby API

-------------------------------------------------------------------
Wed Jan 24 23:48:00 UTC 2012 - kruber@zib.de

- Scalaris 0.4.0 (codename "Pomacea scalaris")
  * API:
    - new functions for incremental data change:
      test_and_set: check for a provided old value before setting a new one
      add_on_nr: increment a numeric value
      add_del_on_list: append or delete entries from a list value
    - added VM API to manage Scalaris nodes inside an Erlang virtual machine
    - added monitoring API to retrieve some live metrics
    - added a connection pool convenience class (Java, Python)
  * Documentation:
    - updated documentation to extended APIs
  * Bugs:
    - fixed numerous bugs

-------------------------------------------------------------------
Fri Jul 15 15:01:00 UTC 2011 - kruber@zib.de

- Scalaris 0.3.0 (codename "Rhinechis Scalaris")
  * API
    - new API with interoperable bindings to Java, Python, Ruby, and JSON
    - support for several data types, including strings, integers, JSON
      objects, binary objects.
    - new transaction interface with support for bundled requests for better
      latency.
  * Tests
    - added numerous unittests
    - added language-binding interoperability tests
  * Documentation
    - extended, but - as always - by far not enough...
  * Bugs
    - fixed countless bugs
