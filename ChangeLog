Scalaris 0.4.1
============================================

Packaging:

- new official ConPaaS packages (http://www.conpaas.eu/)
- install rubygem dependencies in Debian postinstall scripts for Ruby API

Bugs:

- better tx cleanup (should fix rare occurance of duplicate client inform)
- forward additional parameters of the start scripts to new syntax of scalarisctl

Scalaris 0.4.0 (codename "Pomacea scalaris")
============================================

API:

- new functions for incremental data change:
  test_and_set: check for a provided old value before setting a new one
  add_on_nr: increment a numeric value
  add_del_on_list: append or delete entries from a list value
- added VM API to manage Scalaris nodes inside an Erlang virtual machine
- added monitoring API to retrieve some live metrics
- added a connection pool convenience class (Java, Python)

Demonstrator "Wiki on Scalaris" (supported by 4CaaSt http://www.4caast.eu/):

- improved performance of page edits
- improved performance of Wikipedia dump loading
- several rendering fixes

Business Logic:

- improved handling of large values by reducing overhead of transaction
  log handling (empty TLog after commit), no copy of value in TLog
  returned to user after read requests)
- eliminated timeouts in data hand-over protocol (relies on fd now)
- added a DB subscribe mechanism, e.g. to become informed when locks
    are freed
- fixed a strong consistency issue in the tx protocol
- gather some run-time statistics and expose them via the APIs and the
  web debug interface

Infrastructure:

- support for Erlang 15B
- fd now also uses feedback from TCP layer
- made message sending more flexible (gets an option list)
- added and corrected several Erlang type specifications
- added scripts to create Scalaris images for OpenNebula
- added tools for using Scalaris as the Database as a Service
  component in ConPaaS (http://www.conpaas.eu/) which is part of the
  EU project Contrail (http://contrail-project.eu/)
- added a separate communication channel for priority messages, e.g. fd
  (reduces falsely reported node crashes under heavy load)

Tests:

- added runtime type-checker for random testing extended unittests

Documentation:

- updated documentation to extended APIs

Bugs:

- fixed numerous bugs


Scalaris 0.3.0 (codename "Rhinechis Scalaris")
==============================================

API:

- new API with interoperable bindings to Java, Python, Ruby, and JSON
- support for several data types, including strings, integers, JSON
  objects, binary objects.
- new transaction interface with support for bundled requests for
  better latency.
- separate APIs to access the raw DHT, a DHT with replication, and the
  transactional DHT

Demonstrator:

- added Wikipedia-hosting using Scalaris as demonstrator application

Business Logic:

- fault-tolerant startup: start Scalaris when a quorum of the
  known_hosts becomes available (option -q in bin/scalarisctl)
- perform data hand-over when nodes join/gracefully leave
  (also works when transactions are executed concurrently)
- added passive load balancing (when a node joins a ring, it samples
  several other nodes and joins at the node that balances the number
  of stored items the most)
- completely rewritten transaction layer (more modular, more
  extendible, less latency)
- modularized / reimplemented Paxos algorithm, so the algorithm can
  also be used outside transactions (e.g. used for quorum-startup)
- switched almost all components to our component framework 'gen_component'
- added gossiping for estimating e.g. the number of nodes or the
  average load in a ring
- more reliable unreliable look-up
- better ring start-up on slow networks

Infrastructure:

- Vivaldi and topology inference
- support for Erlang 13B01 and newer
- faster TCP/IP communication between Scalaris nodes
- completely rewritten failure detector framework for more accurate
  detection of node failures
- added numerous Erlang type specifications
- extended unittests

Tests:

- added own random testing framework that reads type specifications
  and scans the source code for constants to generate proper random
  test-data
- extended gen_component with breakpoint-support for debugging and
  testing (perform deterministic pseudo-random message interleaving
  tests)
- added numerous unittests
- added language-binding interoperability tests

Documentation:

- extended, but - as always - by far not enough...

Bugs:

- fixed countless bugs

Scalaris 0.2.0 - 0.2.3
======================

- changes not explicitly recorded (see the corresponding svn
  commit messages)

